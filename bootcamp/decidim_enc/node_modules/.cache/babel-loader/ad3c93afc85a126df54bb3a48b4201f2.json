{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _regeneratorRuntime() {\n  \"use strict\";\n\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nvar visitedPages = JSON.parse(sessionStorage.getItem(\"visitedPages\")) || [];\nvar DELAYED_VISITS = 2;\nvar deferredPrompt = null;\nvar shouldCountVisitedPages = function shouldCountVisitedPages() {\n  return sessionStorage.getItem(\"userChoice\") !== \"dismissed\" && visitedPages.length < DELAYED_VISITS && !visitedPages.includes(location.pathname);\n};\nvar shouldPrompt = function shouldPrompt() {\n  // Disable the application install prompt showing constantly.\n  if (localStorage.getItem(\"pwaInstallPromptSeen\")) {\n    return false;\n  }\n  return deferredPrompt && sessionStorage.getItem(\"userChoice\") !== \"dismissed\" && visitedPages.length >= DELAYED_VISITS;\n};\nwindow.addEventListener(\"beforeinstallprompt\", function (event) {\n  event.preventDefault();\n  deferredPrompt = event;\n\n  // allow the user browse through different locations before prompt them anything\n  if (shouldCountVisitedPages()) {\n    sessionStorage.setItem(\"visitedPages\", JSON.stringify([].concat(_toConsumableArray(visitedPages), [location.pathname])));\n  }\n});\n\n// to trigger the prompt, it must be a \"user gesture\"\nwindow.addEventListener(\"click\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n    var _yield$deferredPrompt, outcome;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!shouldPrompt()) {\n              _context.next = 10;\n              break;\n            }\n            event.preventDefault();\n            deferredPrompt.prompt();\n            _context.next = 5;\n            return deferredPrompt.userChoice;\n          case 5:\n            _yield$deferredPrompt = _context.sent;\n            outcome = _yield$deferredPrompt.outcome;\n            // store the user choice to avoid asking again in the current session\n            sessionStorage.setItem(\"userChoice\", outcome);\n            sessionStorage.removeItem(\"visitedPages\");\n            localStorage.setItem(\"pwaInstallPromptSeen\", true);\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());","map":{"version":3,"mappings":"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","names":["_regeneratorRuntime","Op","hasOwn","defineProperty","obj","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","value","enumerable","configurable","writable","define","generator","context","type","arg","exports","NativeIteratorPrototype","invoke","result","reject","state","done","tryLoc","record","next","__await","keys","constructor","reset","stop","dispatchException","hasFinally","abrupt","finallyEntry","complete","finish","resetTryEntry","delegateYield","iterator","resultName","nextLoc","resolve","Promise","args","asyncGeneratorStep","_next","arr2","visitedPages","JSON","parse","sessionStorage","getItem","DELAYED_VISITS","deferredPrompt","shouldCountVisitedPages","length","includes","location","pathname","shouldPrompt","localStorage","window","addEventListener","event","preventDefault","setItem","stringify","_context","prompt","userChoice","_yield$deferredPrompt","outcome","removeItem"],"sources":["/home/alan/.rvm/gems/ruby-3.0.3/gems/decidim-core-0.27.0/app/packs/src/decidim/sw/a2hs.js"],"sourcesContent":["const visitedPages = JSON.parse(sessionStorage.getItem(\"visitedPages\")) || []\nconst DELAYED_VISITS = 2\nlet deferredPrompt = null\n\nconst shouldCountVisitedPages = () => sessionStorage.getItem(\"userChoice\") !== \"dismissed\" && visitedPages.length < DELAYED_VISITS && !visitedPages.includes(location.pathname)\nconst shouldPrompt = () => {\n  // Disable the application install prompt showing constantly.\n  if (localStorage.getItem(\"pwaInstallPromptSeen\")) {\n    return false\n  }\n\n  return deferredPrompt && sessionStorage.getItem(\"userChoice\") !== \"dismissed\" && visitedPages.length >= DELAYED_VISITS\n}\n\nwindow.addEventListener(\"beforeinstallprompt\", (event) => {\n  event.preventDefault()\n  deferredPrompt = event\n\n  // allow the user browse through different locations before prompt them anything\n  if (shouldCountVisitedPages()) {\n    sessionStorage.setItem(\"visitedPages\", JSON.stringify([...visitedPages, location.pathname]))\n  }\n});\n\n// to trigger the prompt, it must be a \"user gesture\"\nwindow.addEventListener(\"click\", async (event) => {\n  if (shouldPrompt()) {\n    event.preventDefault()\n    deferredPrompt.prompt()\n\n    const { outcome } = await deferredPrompt.userChoice;\n    // store the user choice to avoid asking again in the current session\n    sessionStorage.setItem(\"userChoice\", outcome)\n    sessionStorage.removeItem(\"visitedPages\")\n    localStorage.setItem(\"pwaInstallPromptSeen\", true)\n  }\n});\n"]},"metadata":{},"sourceType":"module"}