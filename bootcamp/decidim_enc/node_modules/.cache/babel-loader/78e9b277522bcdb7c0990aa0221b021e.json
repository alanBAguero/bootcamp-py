{"ast":null,"code":"var DEFAULT_ATTRIBUTES = {\n  role: \"img\",\n  \"aria-hidden\": \"true\"\n};\n\n/**\n * Generates a Decidim icon element and returns it as a string.\n * @param {String} iconKey - the key of the icon to be generated\n * @param {Object} attributes - extra attributes to define for the icon SVG\n * @param {int} wait - number of milliseconds to wait before executing the function.\n * @private\n * @returns {Void} - Returns nothing.\n */\nexport default function icon(iconKey) {\n  var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var iconAttributes = $.extend(DEFAULT_ATTRIBUTES, attributes);\n  var title = iconAttributes.title || iconAttributes.ariaLabel;\n  Reflect.deleteProperty(iconAttributes, \"title\");\n  var htmlAttributes = {\n    \"class\": \"icon icon--\".concat(iconKey)\n  };\n  Object.keys(iconAttributes).forEach(function (key) {\n    // Convert the key to dash-format.\n    var newKey = key.replace(/([A-Z])/g, function (ucw) {\n      return \"-\".concat(ucw[0].toLowerCase());\n    });\n    if (typeof htmlAttributes[key] === \"undefined\") {\n      htmlAttributes[newKey] = iconAttributes[key];\n    } else {\n      htmlAttributes[newKey] = \"\".concat(htmlAttributes[newKey], \" \").concat(iconAttributes[key]);\n    }\n  });\n  var iconsPath = window.Decidim.config.get(\"icons_path\");\n  var elHtml = \"<svg><use href=\\\"\".concat(iconsPath, \"#icon-\").concat(iconKey, \"\\\"></use></svg>\");\n  var $el = $(elHtml);\n  if (title) {\n    $el.prepend(\"<title>\".concat(title, \"</title>\"));\n  } else {\n    // This keeps accessibility audit tools happy\n    $el.prepend(\"<title>\".concat(iconKey, \"</title>\"));\n    // Force hidden if title is not defined\n    htmlAttributes[\"aria-hidden\"] = \"true\";\n  }\n  $el.attr(htmlAttributes);\n  return $(\"<div />\").append($el).html();\n}","map":{"version":3,"mappings":"AAAA,IAAMA,kBAAkB,GAAG;EACzBC,IAAI,EAAE,KAAK;EACX,aAAa,EAAE;AACjB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,IAAI,CAACC,OAAO,EAAmB;EAAA,IAAjBC,UAAU,uEAAG,CAAC,CAAC;EACnD,IAAMC,cAAc,GAAGC,CAAC,CAACC,MAAM,CAACP,kBAAkB,EAAEI,UAAU,CAAC;EAC/D,IAAMI,KAAK,GAAGH,cAAc,CAACG,KAAK,IAAIH,cAAc,CAACI,SAAS;EAC9DC,OAAO,CAACC,cAAc,CAACN,cAAc,EAAE,OAAO,CAAC;EAE/C,IAAMO,cAAc,GAAG;IACrB,OAAO,uBAAgBT,OAAO;EAChC,CAAC;EACDU,MAAM,CAACC,IAAI,CAACT,cAAc,CAAC,CAACU,OAAO,CAAC,UAACC,GAAG,EAAK;IAC3C;IACA,IAAMC,MAAM,GAAGD,GAAG,CAACE,OAAO,CAAC,UAAU,EAAE,UAACC,GAAG;MAAA,kBAASA,GAAG,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;IAAA,CAAE,CAAC;IAC3E,IAAI,OAAOR,cAAc,CAACI,GAAG,CAAC,KAAK,WAAW,EAAE;MAC9CJ,cAAc,CAACK,MAAM,CAAC,GAAGZ,cAAc,CAACW,GAAG,CAAC;IAC9C,CAAC,MAAM;MACLJ,cAAc,CAACK,MAAM,CAAC,aAAML,cAAc,CAACK,MAAM,CAAC,cAAIZ,cAAc,CAACW,GAAG,CAAC,CAAE;IAC7E;EACF,CAAC,CAAC;EAEF,IAAMK,SAAS,GAAIC,MAAM,CAACC,OAAO,CAACC,MAAM,CAACC,GAAG,CAAC,YAAY,CAAC;EAC1D,IAAMC,MAAM,8BAAsBL,SAAS,mBAASlB,OAAO,oBAAgB;EAC3E,IAAMwB,GAAG,GAAGrB,CAAC,CAACoB,MAAM,CAAC;EACrB,IAAIlB,KAAK,EAAE;IACTmB,GAAG,CAACC,OAAO,kBAAWpB,KAAK,cAAW;EACxC,CAAC,MAAM;IACL;IACAmB,GAAG,CAACC,OAAO,kBAAWzB,OAAO,cAAW;IACxC;IACAS,cAAc,CAAC,aAAa,CAAC,GAAG,MAAM;EACxC;EACAe,GAAG,CAACE,IAAI,CAACjB,cAAc,CAAC;EAExB,OAAON,CAAC,CAAC,SAAS,CAAC,CAACwB,MAAM,CAACH,GAAG,CAAC,CAACI,IAAI,EAAE;AACxC","names":["DEFAULT_ATTRIBUTES","role","icon","iconKey","attributes","iconAttributes","$","extend","title","ariaLabel","Reflect","deleteProperty","htmlAttributes","Object","keys","forEach","key","newKey","replace","ucw","toLowerCase","iconsPath","window","Decidim","config","get","elHtml","$el","prepend","attr","append","html"],"sources":["/home/alan/.rvm/gems/ruby-3.0.3/gems/decidim-core-0.27.0/app/packs/src/decidim/icon.js"],"sourcesContent":["const DEFAULT_ATTRIBUTES = {\n  role: \"img\",\n  \"aria-hidden\": \"true\"\n};\n\n/**\n * Generates a Decidim icon element and returns it as a string.\n * @param {String} iconKey - the key of the icon to be generated\n * @param {Object} attributes - extra attributes to define for the icon SVG\n * @param {int} wait - number of milliseconds to wait before executing the function.\n * @private\n * @returns {Void} - Returns nothing.\n */\nexport default function icon(iconKey, attributes = {}) {\n  const iconAttributes = $.extend(DEFAULT_ATTRIBUTES, attributes);\n  const title = iconAttributes.title || iconAttributes.ariaLabel;\n  Reflect.deleteProperty(iconAttributes, \"title\");\n\n  const htmlAttributes = {\n    \"class\": `icon icon--${iconKey}`\n  };\n  Object.keys(iconAttributes).forEach((key) => {\n    // Convert the key to dash-format.\n    const newKey = key.replace(/([A-Z])/g, (ucw) => `-${ucw[0].toLowerCase()}`);\n    if (typeof htmlAttributes[key] === \"undefined\") {\n      htmlAttributes[newKey] = iconAttributes[key];\n    } else {\n      htmlAttributes[newKey] = `${htmlAttributes[newKey]} ${iconAttributes[key]}`;\n    }\n  });\n\n  const iconsPath =  window.Decidim.config.get(\"icons_path\");\n  const elHtml = `<svg><use href=\"${iconsPath}#icon-${iconKey}\"></use></svg>`;\n  const $el = $(elHtml);\n  if (title) {\n    $el.prepend(`<title>${title}</title>`);\n  } else {\n    // This keeps accessibility audit tools happy\n    $el.prepend(`<title>${iconKey}</title>`);\n    // Force hidden if title is not defined\n    htmlAttributes[\"aria-hidden\"] = \"true\";\n  }\n  $el.attr(htmlAttributes);\n\n  return $(\"<div />\").append($el).html();\n}\n"]},"metadata":{},"sourceType":"module"}