{"ast":null,"code":"import UploadModal from \"src/decidim/direct_uploads/upload_modal\";\nimport { truncateFilename, createHiddenInput } from \"src/decidim/direct_uploads/upload_utility\";\nvar loadAttachments = function loadAttachments(modal) {\n  Array.from(modal.activeAttachments.children).forEach(function (child) {\n    modal.createUploadItem(child.dataset.filename, child.dataset.title, \"validated\");\n  });\n};\nvar addInputEventListener = function addInputEventListener(modal) {\n  modal.input.addEventListener(\"change\", function (event) {\n    event.preventDefault();\n    var files = event.target.files;\n    Array.from(files).forEach(function (file) {\n      return modal.uploadFile(file);\n    });\n  });\n};\nvar addButtonEventListener = function addButtonEventListener(modal) {\n  modal.button.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    Array.from(modal.trashCan.children).forEach(function (item) {\n      modal.uploadItems.append(item);\n    });\n    if (modal.uploadItems.children.length === 0) {\n      modal.modalTitle.innerHTML = modal.modalTitle.dataset.addlabel;\n    } else {\n      modal.modalTitle.innerHTML = modal.modalTitle.dataset.editlabel;\n    }\n    modal.updateDropZone();\n  });\n};\nvar addDropZoneEventListeners = function addDropZoneEventListeners(modal) {\n  modal.dropZone.addEventListener(\"dragenter\", function (event) {\n    event.preventDefault();\n  });\n  modal.dropZone.addEventListener(\"dragover\", function (event) {\n    event.preventDefault();\n    modal.dropZone.classList.add(\"is-dragover\");\n  });\n  modal.dropZone.addEventListener(\"dragleave\", function () {\n    modal.dropZone.classList.remove(\"is-dragover\");\n  });\n  modal.dropZone.addEventListener(\"drop\", function (event) {\n    event.preventDefault();\n    var files = event.dataTransfer.files;\n    Array.from(files).forEach(function (file) {\n      return modal.uploadFile(file);\n    });\n  });\n};\nvar addSaveButtonEventListener = function addSaveButtonEventListener(modal) {\n  modal.saveButton.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    var validatedItems = modal.uploadItems.querySelectorAll(\".upload-item[data-state='validated']\");\n    var validatedItemsCount = validatedItems.length;\n    validatedItems.forEach(function (item) {\n      var details = item.querySelector(\".attachment-details\");\n      if (details) {\n        modal.activeAttachments.appendChild(details);\n      } else {\n        details = modal.activeAttachments.querySelector(\".attachment-details[data-filename='\".concat(item.dataset.filename, \"'\"));\n      }\n      var span = details.querySelector(\"span\");\n      span.classList.add(\"filename\");\n      if (modal.options.titled) {\n        var title = item.querySelector(\"input[type='text']\").value;\n        details.dataset.title = title;\n        var hiddenTitle = details.querySelector(\".hidden-title\");\n        if (hiddenTitle) {\n          hiddenTitle.value = title;\n        } else {\n          var attachmentId = details.querySelector(\"[name='\".concat(modal.options.resourceName, \"[\").concat(modal.name, \"][]'\")).value;\n          var ordinalNumber = modal.getOrdinalNumber();\n          var hiddenTitleField = createHiddenInput(\"hidden-title\", \"\".concat(modal.options.resourceName, \"[\").concat(modal.options.addAttribute, \"][\").concat(ordinalNumber, \"][title]\"), title);\n          var hiddenIdField = createHiddenInput(\"hidden-id\", \"\".concat(modal.options.resourceName, \"[\").concat(modal.options.addAttribute, \"][\").concat(ordinalNumber, \"][id]\"), attachmentId);\n          details.appendChild(hiddenTitleField);\n          details.appendChild(hiddenIdField);\n        }\n        span.innerHTML = \"\".concat(title, \" (\").concat(truncateFilename(item.dataset.filename), \")\");\n      } else {\n        span.innerHTML = truncateFilename(item.dataset.filename, 19);\n      }\n      span.style.display = \"block\";\n    });\n    if (!modal.options.titled && modal.trashCan.children.length > 0) {\n      modal.activeAttachments.innerHTML = \"<input name='\".concat(modal.options.resourceName, \"[remove_\").concat(modal.name, \"]' type=\\\"hidden\\\" value=\\\"true\\\">\");\n    }\n    if (validatedItemsCount > 0) {\n      // Foundation helper does some magic with error fields, so these must be triggered using jQuery.\n      var $el = $(modal.uploadContainer.querySelector(\"input[type='checkbox']\"));\n      if ($el) {\n        $el.prop(\"checked\", true);\n        $el.trigger(\"change\");\n      }\n    }\n    modal.cleanTrashCan();\n    modal.updateAddAttachmentsButton();\n  });\n};\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  var attachmentButtons = document.querySelectorAll(\"button.add-file\");\n  attachmentButtons.forEach(function (attachmentButton) {\n    var modal = new UploadModal(attachmentButton);\n    loadAttachments(modal);\n    addInputEventListener(modal);\n    addButtonEventListener(modal);\n    addDropZoneEventListeners(modal);\n    addSaveButtonEventListener(modal);\n  });\n});","map":{"version":3,"mappings":"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","names":["UploadModal","truncateFilename","createHiddenInput","loadAttachments","modal","Array","from","activeAttachments","children","forEach","child","createUploadItem","dataset","filename","title","addInputEventListener","input","addEventListener","event","preventDefault","files","target","file","uploadFile","addButtonEventListener","button","trashCan","item","uploadItems","append","length","modalTitle","innerHTML","addlabel","editlabel","updateDropZone","addDropZoneEventListeners","dropZone","classList","add","remove","dataTransfer","addSaveButtonEventListener","saveButton","validatedItems","querySelectorAll","validatedItemsCount","details","querySelector","appendChild","span","options","titled","value","hiddenTitle","attachmentId","resourceName","name","ordinalNumber","getOrdinalNumber","hiddenTitleField","addAttribute","hiddenIdField","style","display","$el","$","uploadContainer","prop","trigger","cleanTrashCan","updateAddAttachmentsButton","document","attachmentButtons","attachmentButton"],"sources":["/home/alan/.rvm/gems/ruby-3.0.3/gems/decidim-core-0.27.0/app/packs/src/decidim/direct_uploads/upload_field.js"],"sourcesContent":["import UploadModal from \"src/decidim/direct_uploads/upload_modal\";\nimport { truncateFilename, createHiddenInput } from \"src/decidim/direct_uploads/upload_utility\";\n\nconst loadAttachments = (modal) => {\n  Array.from(modal.activeAttachments.children).forEach((child) => {\n    modal.createUploadItem(child.dataset.filename, child.dataset.title, \"validated\");\n  })\n}\n\nconst addInputEventListener = (modal) => {\n  modal.input.addEventListener(\"change\", (event) => {\n    event.preventDefault();\n    const files = event.target.files;\n    Array.from(files).forEach((file) => modal.uploadFile(file));\n  })\n}\n\nconst addButtonEventListener = (modal) => {\n  modal.button.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    Array.from(modal.trashCan.children).forEach((item) => {\n      modal.uploadItems.append(item);\n    })\n    if (modal.uploadItems.children.length === 0) {\n      modal.modalTitle.innerHTML = modal.modalTitle.dataset.addlabel;\n    } else {\n      modal.modalTitle.innerHTML = modal.modalTitle.dataset.editlabel;\n    }\n    modal.updateDropZone();\n  })\n}\n\nconst addDropZoneEventListeners = (modal) => {\n  modal.dropZone.addEventListener(\"dragenter\", (event) => {\n    event.preventDefault();\n  })\n\n  modal.dropZone.addEventListener(\"dragover\", (event) => {\n    event.preventDefault();\n    modal.dropZone.classList.add(\"is-dragover\");\n  })\n\n  modal.dropZone.addEventListener(\"dragleave\", () => {\n    modal.dropZone.classList.remove(\"is-dragover\");\n  })\n\n  modal.dropZone.addEventListener(\"drop\", (event) => {\n    event.preventDefault();\n    const files = event.dataTransfer.files;\n    Array.from(files).forEach((file) => modal.uploadFile(file));\n  })\n}\n\nconst addSaveButtonEventListener = (modal) => {\n  modal.saveButton.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    const validatedItems = modal.uploadItems.querySelectorAll(\".upload-item[data-state='validated']\")\n    const validatedItemsCount = validatedItems.length;\n    validatedItems.forEach((item) => {\n      let details = item.querySelector(\".attachment-details\");\n      if (details) {\n        modal.activeAttachments.appendChild(details);\n      } else {\n        details = modal.activeAttachments.querySelector(`.attachment-details[data-filename='${item.dataset.filename}'`);\n      }\n      const span = details.querySelector(\"span\");\n      span.classList.add(\"filename\");\n      if (modal.options.titled) {\n        const title = item.querySelector(\"input[type='text']\").value;\n        details.dataset.title = title;\n        let hiddenTitle = details.querySelector(\".hidden-title\")\n        if (hiddenTitle) {\n          hiddenTitle.value = title;\n        } else {\n          const attachmentId = details.querySelector(`[name='${modal.options.resourceName}[${modal.name}][]'`).value\n          const ordinalNumber = modal.getOrdinalNumber()\n          const hiddenTitleField = createHiddenInput(\"hidden-title\", `${modal.options.resourceName}[${modal.options.addAttribute}][${ordinalNumber}][title]`, title)\n          const hiddenIdField = createHiddenInput(\"hidden-id\", `${modal.options.resourceName}[${modal.options.addAttribute}][${ordinalNumber}][id]`, attachmentId)\n          details.appendChild(hiddenTitleField);\n          details.appendChild(hiddenIdField);\n        }\n        span.innerHTML = `${title} (${truncateFilename(item.dataset.filename)})`;\n      } else {\n        span.innerHTML = truncateFilename(item.dataset.filename, 19);\n      }\n      span.style.display = \"block\";\n    });\n\n    if (!modal.options.titled && modal.trashCan.children.length > 0) {\n      modal.activeAttachments.innerHTML = `<input name='${modal.options.resourceName}[remove_${modal.name}]' type=\"hidden\" value=\"true\">`;\n    }\n\n    if (validatedItemsCount > 0) {\n      // Foundation helper does some magic with error fields, so these must be triggered using jQuery.\n      const $el = $(modal.uploadContainer.querySelector(\"input[type='checkbox']\"));\n      if ($el) {\n        $el.prop(\"checked\", true);\n        $el.trigger(\"change\");\n      }\n    }\n    modal.cleanTrashCan();\n    modal.updateAddAttachmentsButton();\n  });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const attachmentButtons = document.querySelectorAll(\"button.add-file\");\n\n  attachmentButtons.forEach((attachmentButton) => {\n    const modal = new UploadModal(attachmentButton);\n    loadAttachments(modal);\n    addInputEventListener(modal);\n    addButtonEventListener(modal);\n    addDropZoneEventListeners(modal);\n    addSaveButtonEventListener(modal);\n  })\n})\n"]},"metadata":{},"sourceType":"module"}