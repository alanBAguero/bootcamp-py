{"ast":null,"code":"export var checkTitles = function checkTitles(parentElement, saveButton) {\n  var everyItemHasTitle = true;\n  Array.from(parentElement.children).forEach(function (item) {\n    var title = item.querySelector(\"input[type='text']\").value;\n    var noTitleErrorSpan = item.querySelector(\".no-title-error\");\n    if (!title || title.length === 0) {\n      everyItemHasTitle = false;\n      saveButton.disabled = true;\n      noTitleErrorSpan.classList.add(\"is-visible\");\n      item.appendChild(noTitleErrorSpan);\n    } else {\n      noTitleErrorSpan.classList.remove(\"is-visible\");\n    }\n  });\n  if (everyItemHasTitle) {\n    saveButton.disabled = false;\n  }\n};\nexport var truncateFilename = function truncateFilename(filename) {\n  var maxLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 31;\n  if (filename.length <= maxLength) {\n    return filename;\n  }\n  var charactersFromBegin = Math.floor(maxLength / 2) - 3;\n  var charactersFromEnd = maxLength - charactersFromBegin - 3;\n  return \"\".concat(filename.slice(0, charactersFromBegin), \"...\").concat(filename.slice(-charactersFromEnd));\n};\nexport var createHiddenInput = function createHiddenInput(elClasses, elName, elValue) {\n  var el = document.createElement(\"input\");\n  el.type = \"hidden\";\n  if (elClasses) {\n    if (typeof elClasses === \"string\") {\n      el.className = elClasses;\n    } else {\n      el.className = elClasses.join(\" \");\n    }\n  }\n  if (elName) {\n    el.name = elName;\n  }\n  if (elValue) {\n    el.value = elValue;\n  }\n  return el;\n};","map":{"version":3,"mappings":"AAAA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAW,CAAIC,aAAa,EAAEC,UAAU,EAAK;EACxD,IAAIC,iBAAiB,GAAG,IAAI;EAE5BC,KAAK,CAACC,IAAI,CAACJ,aAAa,CAACK,QAAQ,CAAC,CAACC,OAAO,CAAC,UAACC,IAAI,EAAK;IACnD,IAAMC,KAAK,GAAGD,IAAI,CAACE,aAAa,CAAC,oBAAoB,CAAC,CAACC,KAAK;IAC5D,IAAMC,gBAAgB,GAAGJ,IAAI,CAACE,aAAa,CAAC,iBAAiB,CAAC;IAC9D,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACI,MAAM,KAAK,CAAC,EAAE;MAChCV,iBAAiB,GAAG,KAAK;MACzBD,UAAU,CAACY,QAAQ,GAAG,IAAI;MAC1BF,gBAAgB,CAACG,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MAC5CR,IAAI,CAACS,WAAW,CAACL,gBAAgB,CAAC;IACpC,CAAC,MAAM;MACLA,gBAAgB,CAACG,SAAS,CAACG,MAAM,CAAC,YAAY,CAAC;IACjD;EACF,CAAC,CAAC;EAEF,IAAIf,iBAAiB,EAAE;IACrBD,UAAU,CAACY,QAAQ,GAAG,KAAK;EAC7B;AACF,CAAC;AAED,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,QAAQ,EAAqB;EAAA,IAAnBC,SAAS,uEAAG,EAAE;EACvD,IAAID,QAAQ,CAACP,MAAM,IAAIQ,SAAS,EAAE;IAChC,OAAOD,QAAQ;EACjB;EAEA,IAAME,mBAAmB,GAAGC,IAAI,CAACC,KAAK,CAACH,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC;EACzD,IAAMI,iBAAiB,GAAGJ,SAAS,GAAGC,mBAAmB,GAAG,CAAC;EAC7D,iBAAUF,QAAQ,CAACM,KAAK,CAAC,CAAC,EAAEJ,mBAAmB,CAAC,gBAAMF,QAAQ,CAACM,KAAK,CAAC,CAACD,iBAAiB,CAAC;AAC1F,CAAC;AAED,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,SAAS,EAAEC,MAAM,EAAEC,OAAO,EAAK;EAC/D,IAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAC1CF,EAAE,CAACG,IAAI,GAAG,QAAQ;EAClB,IAAIN,SAAS,EAAE;IACb,IAAI,OAAQA,SAAU,KAAK,QAAQ,EAAE;MACnCG,EAAE,CAACI,SAAS,GAAGP,SAAS;IAC1B,CAAC,MAAM;MACLG,EAAE,CAACI,SAAS,GAAGP,SAAS,CAACQ,IAAI,CAAC,GAAG,CAAC;IACpC;EACF;EACA,IAAIP,MAAM,EAAE;IACVE,EAAE,CAACM,IAAI,GAAGR,MAAM;EAClB;EACA,IAAIC,OAAO,EAAE;IACXC,EAAE,CAACpB,KAAK,GAAGmB,OAAO;EACpB;EACA,OAAOC,EAAE;AACX,CAAC","names":["checkTitles","parentElement","saveButton","everyItemHasTitle","Array","from","children","forEach","item","title","querySelector","value","noTitleErrorSpan","length","disabled","classList","add","appendChild","remove","truncateFilename","filename","maxLength","charactersFromBegin","Math","floor","charactersFromEnd","slice","createHiddenInput","elClasses","elName","elValue","el","document","createElement","type","className","join","name"],"sources":["/home/alan/.rvm/gems/ruby-3.0.3/gems/decidim-core-0.27.0/app/packs/src/decidim/direct_uploads/upload_utility.js"],"sourcesContent":["export const checkTitles = (parentElement, saveButton) => {\n  let everyItemHasTitle = true;\n\n  Array.from(parentElement.children).forEach((item) => {\n    const title = item.querySelector(\"input[type='text']\").value;\n    const noTitleErrorSpan = item.querySelector(\".no-title-error\");\n    if (!title || title.length === 0) {\n      everyItemHasTitle = false;\n      saveButton.disabled = true;\n      noTitleErrorSpan.classList.add(\"is-visible\");\n      item.appendChild(noTitleErrorSpan);\n    } else {\n      noTitleErrorSpan.classList.remove(\"is-visible\");\n    }\n  });\n\n  if (everyItemHasTitle) {\n    saveButton.disabled = false;\n  }\n}\n\nexport const truncateFilename = (filename, maxLength = 31) => {\n  if (filename.length <= maxLength) {\n    return filename;\n  }\n\n  const charactersFromBegin = Math.floor(maxLength / 2) - 3;\n  const charactersFromEnd = maxLength - charactersFromBegin - 3;\n  return `${filename.slice(0, charactersFromBegin)}...${filename.slice(-charactersFromEnd)}`;\n}\n\nexport const createHiddenInput = (elClasses, elName, elValue) => {\n  const el = document.createElement(\"input\");\n  el.type = \"hidden\";\n  if (elClasses) {\n    if (typeof (elClasses) === \"string\") {\n      el.className = elClasses;\n    } else {\n      el.className = elClasses.join(\" \")\n    }\n  }\n  if (elName) {\n    el.name = elName;\n  }\n  if (elValue) {\n    el.value = elValue;\n  }\n  return el;\n}\n"]},"metadata":{},"sourceType":"module"}