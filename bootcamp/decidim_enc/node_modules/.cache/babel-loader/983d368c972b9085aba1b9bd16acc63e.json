{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n/* eslint-disable require-jsdoc */\nvar MaxChoicesAlertComponent = /*#__PURE__*/function () {\n  function MaxChoicesAlertComponent() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, MaxChoicesAlertComponent);\n    this.wrapperField = options.wrapperField;\n    this.alertElement = options.alertElement;\n    this.controllerFieldSelector = options.controllerFieldSelector;\n    this.controllerCollectionSelector = options.controllerCollectionSelector;\n    this.maxChoices = options.maxChoices;\n    this.controllerSelector = this.wrapperField.find(this.controllerFieldSelector);\n    this._bindEvent();\n    this._run();\n  }\n  _createClass(MaxChoicesAlertComponent, [{\n    key: \"_run\",\n    value: function _run() {\n      var _this = this;\n      var rows = this.wrapperField.find(this.controllerCollectionSelector);\n      var alert = false;\n      rows.each(function (rowIdx, row) {\n        var checked = $(row).find(_this.controllerFieldSelector).filter(function (checkboxIdx, checkbox) {\n          return $(checkbox).is(\":checked\");\n        });\n        alert = alert || checked.length > _this.maxChoices;\n      });\n      if (alert) {\n        this.alertElement.show();\n      } else {\n        this.alertElement.hide();\n      }\n    }\n  }, {\n    key: \"_bindEvent\",\n    value: function _bindEvent() {\n      var _this2 = this;\n      this.controllerSelector.on(\"change\", function () {\n        _this2._run();\n      });\n    }\n  }]);\n  return MaxChoicesAlertComponent;\n}();\nexport default function createMaxChoicesAlertComponent(options) {\n  return new MaxChoicesAlertComponent(options);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,IAEMA,wBAAwB;EAC5B,oCAA0B;IAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;IAAAC;IACtB,IAAI,CAACC,YAAY,GAAGF,OAAO,CAACE,YAAY;IACxC,IAAI,CAACC,YAAY,GAAGH,OAAO,CAACG,YAAY;IACxC,IAAI,CAACC,uBAAuB,GAAGJ,OAAO,CAACI,uBAAuB;IAC9D,IAAI,CAACC,4BAA4B,GAAGL,OAAO,CAACK,4BAA4B;IACxE,IAAI,CAACC,UAAU,GAAGN,OAAO,CAACM,UAAU;IACpC,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACL,YAAY,CAACM,IAAI,CAAC,IAAI,CAACJ,uBAAuB,CAAC;IAC9E,IAAI,CAACK,UAAU,EAAE;IACjB,IAAI,CAACC,IAAI,EAAE;EACb;EAACC;IAAAC;IAAAC,OAED,gBAAO;MAAA;MACL,IAAMC,IAAI,GAAG,IAAI,CAACZ,YAAY,CAACM,IAAI,CAAC,IAAI,CAACH,4BAA4B,CAAC;MAEtE,IAAIU,KAAK,GAAG,KAAK;MAEjBD,IAAI,CAACE,IAAI,CAAC,UAACC,MAAM,EAAEC,GAAG,EAAK;QACzB,IAAMC,OAAO,GAAGC,CAAC,CAACF,GAAG,CAAC,CAACV,IAAI,CAACa,KAAI,CAACjB,uBAAuB,CAAC,CAACkB,MAAM,CAAC,UAACC,WAAW,EAAEC,QAAQ;UAAA,OAAKJ,CAAC,CAACI,QAAQ,CAAC,CAACC,EAAE,CAAC,UAAU,CAAC;QAAA,EAAC;QAEvHV,KAAK,GAAGA,KAAK,IAAII,OAAO,CAACO,MAAM,GAAGL,KAAI,CAACf,UAAU;MACnD,CAAC,CAAC;MAEF,IAAIS,KAAK,EAAE;QACT,IAAI,CAACZ,YAAY,CAACwB,IAAI,EAAE;MAC1B,CAAC,MACI;QACH,IAAI,CAACxB,YAAY,CAACyB,IAAI,EAAE;MAC1B;IACF;EAAC;IAAAhB;IAAAC,OAED,sBAAa;MAAA;MACX,IAAI,CAACN,kBAAkB,CAACsB,EAAE,CAAC,QAAQ,EAAE,YAAM;QACzCC,MAAI,CAACpB,IAAI,EAAE;MACb,CAAC,CAAC;IACJ;EAAC;EAAA;AAAA;AAGH,eAAe,SAASqB,8BAA8B,CAAC/B,OAAO,EAAE;EAC9D,OAAO,IAAID,wBAAwB,CAACC,OAAO,CAAC;AAC9C","names":["MaxChoicesAlertComponent","options","_classCallCheck","wrapperField","alertElement","controllerFieldSelector","controllerCollectionSelector","maxChoices","controllerSelector","find","_bindEvent","_run","_createClass","key","value","rows","alert","each","rowIdx","row","checked","$","_this","filter","checkboxIdx","checkbox","is","length","show","hide","on","_this2","createMaxChoicesAlertComponent"],"sources":["/home/alan/.rvm/gems/ruby-3.0.3/gems/decidim-forms-0.27.0/app/packs/src/decidim/forms/max_choices_alert.component.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\nclass MaxChoicesAlertComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.alertElement = options.alertElement;\n    this.controllerFieldSelector = options.controllerFieldSelector;\n    this.controllerCollectionSelector = options.controllerCollectionSelector;\n    this.maxChoices = options.maxChoices;\n    this.controllerSelector = this.wrapperField.find(this.controllerFieldSelector);\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    const rows = this.wrapperField.find(this.controllerCollectionSelector);\n\n    let alert = false;\n\n    rows.each((rowIdx, row) => {\n      const checked = $(row).find(this.controllerFieldSelector).filter((checkboxIdx, checkbox) => $(checkbox).is(\":checked\"));\n\n      alert = alert || checked.length > this.maxChoices;\n    });\n\n    if (alert) {\n      this.alertElement.show();\n    }\n    else {\n      this.alertElement.hide();\n    }\n  }\n\n  _bindEvent() {\n    this.controllerSelector.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createMaxChoicesAlertComponent(options) {\n  return new MaxChoicesAlertComponent(options);\n}\n"]},"metadata":{},"sourceType":"module"}