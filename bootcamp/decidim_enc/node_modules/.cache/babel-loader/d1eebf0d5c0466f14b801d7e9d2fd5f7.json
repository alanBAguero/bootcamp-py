{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n/* eslint-disable require-jsdoc */\nvar OptionAttachedInputsComponent = /*#__PURE__*/function () {\n  function OptionAttachedInputsComponent() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, OptionAttachedInputsComponent);\n    this.wrapperField = options.wrapperField;\n    this.controllerFieldSelector = options.controllerFieldSelector;\n    this.dependentInputSelector = options.dependentInputSelector;\n    this.controllerSelector = this.wrapperField.find(this.controllerFieldSelector);\n    this._bindEvent();\n    this._run();\n  }\n  _createClass(OptionAttachedInputsComponent, [{\n    key: \"_run\",\n    value: function _run() {\n      var _this = this;\n      this.controllerSelector.each(function (idx, el) {\n        var $field = $(el);\n        var enabled = $field.is(\":checked\");\n        $field.parents(\"div.collection-input\").find(_this.dependentInputSelector).prop(\"disabled\", !enabled);\n      });\n    }\n  }, {\n    key: \"_bindEvent\",\n    value: function _bindEvent() {\n      var _this2 = this;\n      this.controllerSelector.on(\"change\", function () {\n        _this2._run();\n      });\n    }\n  }]);\n  return OptionAttachedInputsComponent;\n}();\nexport default function createOptionAttachedInputs(options) {\n  return new OptionAttachedInputsComponent(options);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,IAEMA,6BAA6B;EACjC,yCAA0B;IAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;IAAAC;IACtB,IAAI,CAACC,YAAY,GAAGF,OAAO,CAACE,YAAY;IACxC,IAAI,CAACC,uBAAuB,GAAGH,OAAO,CAACG,uBAAuB;IAC9D,IAAI,CAACC,sBAAsB,GAAGJ,OAAO,CAACI,sBAAsB;IAC5D,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACH,YAAY,CAACI,IAAI,CAAC,IAAI,CAACH,uBAAuB,CAAC;IAC9E,IAAI,CAACI,UAAU,EAAE;IACjB,IAAI,CAACC,IAAI,EAAE;EACb;EAACC;IAAAC;IAAAC,OAED,gBAAO;MAAA;MACL,IAAI,CAACN,kBAAkB,CAACO,IAAI,CAAC,UAACC,GAAG,EAAEC,EAAE,EAAK;QACxC,IAAMC,MAAM,GAAGC,CAAC,CAACF,EAAE,CAAC;QACpB,IAAMG,OAAO,GAAGF,MAAM,CAACG,EAAE,CAAC,UAAU,CAAC;QAErCH,MAAM,CAACI,OAAO,CAAC,sBAAsB,CAAC,CAACb,IAAI,CAACc,KAAI,CAAChB,sBAAsB,CAAC,CAACiB,IAAI,CAAC,UAAU,EAAE,CAACJ,OAAO,CAAC;MACrG,CAAC,CAAC;IACJ;EAAC;IAAAP;IAAAC,OAED,sBAAa;MAAA;MACX,IAAI,CAACN,kBAAkB,CAACiB,EAAE,CAAC,QAAQ,EAAE,YAAM;QACzCC,MAAI,CAACf,IAAI,EAAE;MACb,CAAC,CAAC;IACJ;EAAC;EAAA;AAAA;AAGH,eAAe,SAASgB,0BAA0B,CAACxB,OAAO,EAAE;EAC1D,OAAO,IAAID,6BAA6B,CAACC,OAAO,CAAC;AACnD","names":["OptionAttachedInputsComponent","options","_classCallCheck","wrapperField","controllerFieldSelector","dependentInputSelector","controllerSelector","find","_bindEvent","_run","_createClass","key","value","each","idx","el","$field","$","enabled","is","parents","_this","prop","on","_this2","createOptionAttachedInputs"],"sources":["/home/alan/.rvm/gems/ruby-3.0.3/gems/decidim-forms-0.27.0/app/packs/src/decidim/forms/option_attached_inputs.component.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\nclass OptionAttachedInputsComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.controllerFieldSelector = options.controllerFieldSelector;\n    this.dependentInputSelector = options.dependentInputSelector;\n    this.controllerSelector = this.wrapperField.find(this.controllerFieldSelector);\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    this.controllerSelector.each((idx, el) => {\n      const $field = $(el);\n      const enabled = $field.is(\":checked\");\n\n      $field.parents(\"div.collection-input\").find(this.dependentInputSelector).prop(\"disabled\", !enabled);\n    });\n  }\n\n  _bindEvent() {\n    this.controllerSelector.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createOptionAttachedInputs(options) {\n  return new OptionAttachedInputsComponent(options);\n}\n"]},"metadata":{},"sourceType":"module"}