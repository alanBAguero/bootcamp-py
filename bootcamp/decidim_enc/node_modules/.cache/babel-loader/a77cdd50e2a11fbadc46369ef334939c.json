{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nvar AutoButtonsByMinItemsComponent = /*#__PURE__*/function () {\n  function AutoButtonsByMinItemsComponent() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, AutoButtonsByMinItemsComponent);\n    this.listSelector = options.listSelector;\n    this.minItems = options.minItems;\n    this.hideOnMinItemsOrLessSelector = options.hideOnMinItemsOrLessSelector;\n    this.run();\n  }\n  _createClass(AutoButtonsByMinItemsComponent, [{\n    key: \"run\",\n    value: function run() {\n      var $list = $(this.listSelector);\n      var $items = $list.find(this.hideOnMinItemsOrLessSelector);\n      if ($list.length <= this.minItems) {\n        $items.hide();\n      } else {\n        $items.show();\n      }\n    }\n  }]);\n  return AutoButtonsByMinItemsComponent;\n}();\nexport { AutoButtonsByMinItemsComponent as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;IAAqBA,8BAA8B;EACjD,0CAA0B;IAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;IAAAC;IACtB,IAAI,CAACC,YAAY,GAAGF,OAAO,CAACE,YAAY;IACxC,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACG,QAAQ;IAChC,IAAI,CAACC,4BAA4B,GAAGJ,OAAO,CAACI,4BAA4B;IAExE,IAAI,CAACC,GAAG,EAAE;EACZ;EAACC;IAAAC;IAAAC,OAED,eAAM;MACJ,IAAMC,KAAK,GAAGC,CAAC,CAAC,IAAI,CAACR,YAAY,CAAC;MAClC,IAAMS,MAAM,GAAGF,KAAK,CAACG,IAAI,CAAC,IAAI,CAACR,4BAA4B,CAAC;MAE5D,IAAIK,KAAK,CAACI,MAAM,IAAI,IAAI,CAACV,QAAQ,EAAE;QACjCQ,MAAM,CAACG,IAAI,EAAE;MACf,CAAC,MAAM;QACLH,MAAM,CAACI,IAAI,EAAE;MACf;IACF;EAAC;EAAA;AAAA;AAAA,SAlBkBhB,8BAA8B","names":["AutoButtonsByMinItemsComponent","options","_classCallCheck","listSelector","minItems","hideOnMinItemsOrLessSelector","run","_createClass","key","value","$list","$","$items","find","length","hide","show"],"sources":["/home/alan/.rvm/gems/ruby-3.0.3/gems/decidim-forms-0.27.0/app/packs/src/decidim/forms/admin/auto_buttons_by_min_items.component.js"],"sourcesContent":["export default class AutoButtonsByMinItemsComponent {\n  constructor(options = {}) {\n    this.listSelector = options.listSelector;\n    this.minItems = options.minItems;\n    this.hideOnMinItemsOrLessSelector = options.hideOnMinItemsOrLessSelector;\n\n    this.run();\n  }\n\n  run() {\n    const $list = $(this.listSelector);\n    const $items = $list.find(this.hideOnMinItemsOrLessSelector);\n\n    if ($list.length <= this.minItems) {\n      $items.hide();\n    } else {\n      $items.show();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}