{"ast":null,"code":"$(function () {\n  $(document).on(\"click\", \"a[data-open-url],button[data-open-url]\", function (event) {\n    event.preventDefault();\n    var link = event.currentTarget;\n    var $modal = $(\"#\".concat(link.dataset.open));\n    $modal.html(\"<div class='loading-spinner'></div>\");\n    $.ajax({\n      type: \"get\",\n      url: link.dataset.openUrl,\n      success: function success(html) {\n        var $html = $(html);\n        $modal.html($html);\n        $html.foundation();\n      },\n      error: function error(request, status, _error) {\n        $modal.html(\"<h3>\".concat(status, \"</h3><p>\").concat(_error, \"</p>\"));\n      }\n    });\n  });\n});","map":{"version":3,"mappings":"AAAAA,CAAC,CAAC,YAAM;EACNA,CAAC,CAACC,QAAQ,CAAC,CAACC,EAAE,CAAC,OAAO,EAAE,wCAAwC,EAAE,UAACC,KAAK,EAAK;IAC3EA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAMC,IAAI,GAAGF,KAAK,CAACG,aAAa;IAChC,IAAMC,MAAM,GAAGP,CAAC,YAAKK,IAAI,CAACG,OAAO,CAACC,IAAI,EAAG;IACzCF,MAAM,CAACG,IAAI,CAAC,qCAAqC,CAAC;IAClDV,CAAC,CAACW,IAAI,CAAC;MACLC,IAAI,EAAE,KAAK;MACXC,GAAG,EAAER,IAAI,CAACG,OAAO,CAACM,OAAO;MACzBC,OAAO,EAAE,iBAACL,IAAI,EAAK;QACjB,IAAMM,KAAK,GAAGhB,CAAC,CAACU,IAAI,CAAC;QACrBH,MAAM,CAACG,IAAI,CAACM,KAAK,CAAC;QAClBA,KAAK,CAACC,UAAU,EAAE;MACpB,CAAC;MACDC,KAAK,EAAE,eAAUC,OAAO,EAAEC,MAAM,EAAEF,MAAK,EAAE;QACvCX,MAAM,CAACG,IAAI,eAAQU,MAAM,qBAAWF,MAAK,UAAO;MAClD;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","names":["$","document","on","event","preventDefault","link","currentTarget","$modal","dataset","open","html","ajax","type","url","openUrl","success","$html","foundation","error","request","status"],"sources":["/home/alan/.rvm/gems/ruby-3.0.3/gems/decidim-core-0.27.0/app/packs/src/decidim/ajax_modals.js"],"sourcesContent":["$(() => {\n  $(document).on(\"click\", \"a[data-open-url],button[data-open-url]\", (event) => {\n    event.preventDefault();\n    const link = event.currentTarget;\n    const $modal = $(`#${link.dataset.open}`);\n    $modal.html(\"<div class='loading-spinner'></div>\");\n    $.ajax({\n      type: \"get\",\n      url: link.dataset.openUrl,\n      success: (html) => {\n        const $html = $(html);\n        $modal.html($html);\n        $html.foundation();\n      },\n      error: function (request, status, error) {\n        $modal.html(`<h3>${status}</h3><p>${error}</p>`);\n      }\n    });\n  });\n});\n"]},"metadata":{},"sourceType":"module"}