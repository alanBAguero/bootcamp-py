{"ast":null,"code":"/* eslint-disable require-jsdoc */\n/* eslint-disable no-prototype-builtins, no-restricted-syntax, no-param-reassign */\n\nvar callbacks = {};\nexport default function registerCallback(callbackId, callback) {\n  callbacks[callbackId] = callback;\n}\nvar unregisterCallback = function unregisterCallback(callbackId) {\n  callbacks[callbackId] = null;\n};\nvar pushState = function pushState(url) {\n  var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  if (window.history) {\n    window.history.pushState(state, null, url);\n  }\n};\nvar replaceState = function replaceState(url) {\n  var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  if (window.history) {\n    window.history.replaceState(state, null, url);\n  }\n};\nvar state = function state() {\n  if (window.history) {\n    return window.history.state;\n  }\n  return null;\n};\nwindow.onpopstate = function (event) {\n  // Ensure the event is caused by user action\n  if (event.isTrusted) {\n    for (var callbackId in callbacks) {\n      if (callbacks.hasOwnProperty(callbackId)) {\n        callbacks[callbackId](event.state);\n      }\n    }\n  }\n};\nexport { registerCallback, unregisterCallback, pushState, replaceState, state };","map":{"version":3,"mappings":"AAAA;AACA;;AAEA,IAAIA,SAAS,GAAG,CAAC,CAAC;AAElB,eAAe,SAASC,gBAAgB,CAACC,UAAU,EAAEC,QAAQ,EAAE;EAC7DH,SAAS,CAACE,UAAU,CAAC,GAAGC,QAAQ;AAClC;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIF,UAAU,EAAK;EACzCF,SAAS,CAACE,UAAU,CAAC,GAAG,IAAI;AAC9B,CAAC;AAED,IAAMG,SAAS,GAAG,SAAZA,SAAS,CAAIC,GAAG,EAAmB;EAAA,IAAjBC,KAAK,uEAAG,IAAI;EAClC,IAAIC,MAAM,CAACC,OAAO,EAAE;IAClBD,MAAM,CAACC,OAAO,CAACJ,SAAS,CAACE,KAAK,EAAE,IAAI,EAAED,GAAG,CAAC;EAC5C;AACF,CAAC;AAED,IAAMI,YAAY,GAAG,SAAfA,YAAY,CAAIJ,GAAG,EAAmB;EAAA,IAAjBC,KAAK,uEAAG,IAAI;EACrC,IAAIC,MAAM,CAACC,OAAO,EAAE;IAClBD,MAAM,CAACC,OAAO,CAACC,YAAY,CAACH,KAAK,EAAE,IAAI,EAAGD,GAAG,CAAC;EAChD;AACF,CAAC;AAED,IAAMC,KAAK,GAAG,SAARA,KAAK,GAAS;EAClB,IAAIC,MAAM,CAACC,OAAO,EAAE;IAClB,OAAOD,MAAM,CAACC,OAAO,CAACF,KAAK;EAC7B;EACA,OAAO,IAAI;AACb,CAAC;AAEDC,MAAM,CAACG,UAAU,GAAG,UAACC,KAAK,EAAK;EAC7B;EACA,IAAIA,KAAK,CAACC,SAAS,EAAE;IACnB,KAAK,IAAIX,UAAU,IAAIF,SAAS,EAAE;MAChC,IAAIA,SAAS,CAACc,cAAc,CAACZ,UAAU,CAAC,EAAE;QACxCF,SAAS,CAACE,UAAU,CAAC,CAACU,KAAK,CAACL,KAAK,CAAC;MACpC;IACF;EACF;AACF,CAAC;AAED,SAASN,gBAAgB,EAAEG,kBAAkB,EAAEC,SAAS,EAAEK,YAAY,EAAEH,KAAK","names":["callbacks","registerCallback","callbackId","callback","unregisterCallback","pushState","url","state","window","history","replaceState","onpopstate","event","isTrusted","hasOwnProperty"],"sources":["/home/alan/.rvm/gems/ruby-3.0.3/gems/decidim-core-0.27.0/app/packs/src/decidim/history.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n/* eslint-disable no-prototype-builtins, no-restricted-syntax, no-param-reassign */\n\nlet callbacks = {};\n\nexport default function registerCallback(callbackId, callback) {\n  callbacks[callbackId] = callback;\n}\n\nconst unregisterCallback = (callbackId) => {\n  callbacks[callbackId] = null;\n}\n\nconst pushState = (url, state = null) => {\n  if (window.history) {\n    window.history.pushState(state, null, url);\n  }\n};\n\nconst replaceState = (url, state = null) => {\n  if (window.history) {\n    window.history.replaceState(state, null,  url);\n  }\n};\n\nconst state = () => {\n  if (window.history) {\n    return window.history.state;\n  }\n  return null;\n};\n\nwindow.onpopstate = (event) => {\n  // Ensure the event is caused by user action\n  if (event.isTrusted) {\n    for (let callbackId in callbacks) {\n      if (callbacks.hasOwnProperty(callbackId)) {\n        callbacks[callbackId](event.state);\n      }\n    }\n  }\n}\n\nexport { registerCallback, unregisterCallback, pushState, replaceState, state };\n"]},"metadata":{},"sourceType":"module"}