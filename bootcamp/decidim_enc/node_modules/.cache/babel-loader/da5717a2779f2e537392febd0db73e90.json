{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _regeneratorRuntime() {\n  \"use strict\";\n\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nwindow.addEventListener(\"DOMContentLoaded\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n  var GRANTED_PERMISSION, hideReminder, subscribeToNotifications, unsubscribeFromNotifications, setToggleState, toggle, registration;\n  return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          GRANTED_PERMISSION = \"granted\";\n          hideReminder = function hideReminder() {\n            var reminder = document.querySelector(\"#push-notifications-reminder\");\n            reminder.classList.add(\"hide\");\n          };\n          subscribeToNotifications = /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(registration) {\n              var permission, vapidElement, vapidPublicKeyElement, subscription, _document$querySelect;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return window.Notification.requestPermission();\n                    case 2:\n                      permission = _context.sent;\n                      if (!(registration && permission === GRANTED_PERMISSION)) {\n                        _context.next = 16;\n                        break;\n                      }\n                      vapidElement = document.querySelector(\"#vapidPublicKey\"); // element could not exist in DOM\n                      if (!vapidElement) {\n                        _context.next = 13;\n                        break;\n                      }\n                      vapidPublicKeyElement = JSON.parse(vapidElement.value);\n                      _context.next = 9;\n                      return registration.pushManager.subscribe({\n                        userVisibleOnly: true,\n                        applicationServerKey: new Uint8Array(vapidPublicKeyElement)\n                      });\n                    case 9:\n                      subscription = _context.sent;\n                      if (!subscription) {\n                        _context.next = 13;\n                        break;\n                      }\n                      _context.next = 13;\n                      return fetch(\"/notifications_subscriptions\", {\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                          \"X-CSRF-Token\": (_document$querySelect = document.querySelector(\"meta[name=csrf-token]\")) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.content\n                        },\n                        method: \"POST\",\n                        body: JSON.stringify(subscription)\n                      });\n                    case 13:\n                      hideReminder();\n                      _context.next = 17;\n                      break;\n                    case 16:\n                      throw new Error(\"Permission not granted for Notification\");\n                    case 17:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n            return function subscribeToNotifications(_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }();\n          unsubscribeFromNotifications = /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(registration) {\n              var _document$querySelect2;\n              var currentSubscription, auth;\n              return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return registration.pushManager.getSubscription();\n                    case 2:\n                      currentSubscription = _context2.sent;\n                      auth = currentSubscription.toJSON().keys.auth;\n                      _context2.next = 6;\n                      return fetch(\"/notifications_subscriptions/\".concat(auth), {\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                          \"X-CSRF-Token\": (_document$querySelect2 = document.querySelector(\"meta[name=csrf-token]\")) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.content\n                        },\n                        method: \"DELETE\"\n                      });\n                    case 6:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n            return function unsubscribeFromNotifications(_x2) {\n              return _ref3.apply(this, arguments);\n            };\n          }();\n          setToggleState = /*#__PURE__*/function () {\n            var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(registration, toggle) {\n              var currentSubscription, toggleChecked, auth, subKeys;\n              return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return registration.pushManager.getSubscription();\n                    case 2:\n                      currentSubscription = _context3.sent;\n                      toggleChecked = false;\n                      if (window.Notification.permission === GRANTED_PERMISSION) {\n                        hideReminder();\n                        if (currentSubscription) {\n                          auth = currentSubscription.toJSON().keys.auth;\n                          subKeys = JSON.parse(document.querySelector(\"#subKeys\").value); // Subscribed && browser notifications enabled\n                          if (subKeys.includes(auth)) {\n                            toggleChecked = true;\n                          }\n                        }\n                      }\n                      toggle.checked = toggleChecked;\n                    case 6:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }));\n            return function setToggleState(_x3, _x4) {\n              return _ref4.apply(this, arguments);\n            };\n          }();\n          if (!(\"serviceWorker\" in navigator)) {\n            _context5.next = 13;\n            break;\n          }\n          toggle = document.getElementById(\"allow_push_notifications\");\n          if (!toggle) {\n            _context5.next = 13;\n            break;\n          }\n          _context5.next = 10;\n          return navigator.serviceWorker.ready;\n        case 10:\n          registration = _context5.sent;\n          setToggleState(registration, toggle);\n          toggle.addEventListener(\"change\", /*#__PURE__*/function () {\n            var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref5) {\n              var target;\n              return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      target = _ref5.target;\n                      if (!target.checked) {\n                        _context4.next = 6;\n                        break;\n                      }\n                      _context4.next = 4;\n                      return subscribeToNotifications(registration);\n                    case 4:\n                      _context4.next = 8;\n                      break;\n                    case 6:\n                      _context4.next = 8;\n                      return unsubscribeFromNotifications(registration);\n                    case 8:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4);\n            }));\n            return function (_x5) {\n              return _ref6.apply(this, arguments);\n            };\n          }());\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _callee5);\n})));","map":{"version":3,"mappings":"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","names":["_regeneratorRuntime","Op","hasOwn","defineProperty","obj","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","value","enumerable","configurable","writable","define","generator","context","type","arg","exports","NativeIteratorPrototype","invoke","result","reject","state","done","tryLoc","record","next","__await","keys","constructor","reset","stop","dispatchException","hasFinally","abrupt","finallyEntry","complete","finish","resetTryEntry","delegateYield","iterator","resultName","nextLoc","resolve","Promise","args","asyncGeneratorStep","_next","window","addEventListener","GRANTED_PERMISSION","hideReminder","reminder","document","querySelector","classList","add","subscribeToNotifications","registration","_context","Notification","requestPermission","permission","vapidElement","vapidPublicKeyElement","JSON","parse","pushManager","subscribe","userVisibleOnly","applicationServerKey","Uint8Array","subscription","fetch","headers","_document$querySelect","content","method","body","stringify","Error","unsubscribeFromNotifications","_context2","getSubscription","currentSubscription","auth","toJSON","_document$querySelect2","setToggleState","toggle","_context3","toggleChecked","subKeys","includes","checked","navigator","_context5","getElementById","serviceWorker","ready","target","_context4"],"sources":["/home/alan/.rvm/gems/ruby-3.0.3/gems/decidim-core-0.27.0/app/packs/src/decidim/sw/push-permissions.js"],"sourcesContent":["window.addEventListener(\"DOMContentLoaded\", async () => {\n  const GRANTED_PERMISSION = \"granted\"\n\n  const hideReminder = function() {\n    const reminder = document.querySelector(\"#push-notifications-reminder\")\n    reminder.classList.add(\"hide\")\n  }\n\n  const subscribeToNotifications = async (registration) => {\n    const permission = await window.Notification.requestPermission();\n\n    if (registration && permission === GRANTED_PERMISSION) {\n      const vapidElement = document.querySelector(\"#vapidPublicKey\")\n      // element could not exist in DOM\n      if (vapidElement) {\n        const vapidPublicKeyElement = JSON.parse(vapidElement.value)\n        const subscription = await registration.pushManager.subscribe({\n          userVisibleOnly: true,\n          applicationServerKey: new Uint8Array(vapidPublicKeyElement)\n        });\n\n        if (subscription) {\n          await fetch(\"/notifications_subscriptions\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"X-CSRF-Token\": document.querySelector(\"meta[name=csrf-token]\")?.content\n            },\n            method: \"POST\",\n            body: JSON.stringify(subscription)\n          });\n        }\n      }\n      hideReminder()\n    } else {\n      throw new Error(\"Permission not granted for Notification\");\n    }\n  }\n\n  const unsubscribeFromNotifications = async (registration) => {\n    /* eslint-disable no-shadow */\n    const currentSubscription = await registration.pushManager.getSubscription()\n    const auth = currentSubscription.toJSON().keys.auth\n    await fetch(`/notifications_subscriptions/${auth}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRF-Token\": document.querySelector(\"meta[name=csrf-token]\")?.content\n      },\n      method: \"DELETE\"\n    });\n  }\n\n  const setToggleState = async (registration, toggle) => {\n    const currentSubscription = await registration.pushManager.getSubscription()\n    let toggleChecked = false\n\n    if (window.Notification.permission === GRANTED_PERMISSION) {\n      hideReminder()\n      if (currentSubscription) {\n        const auth = currentSubscription.toJSON().keys.auth\n        const subKeys = JSON.parse(document.querySelector(\"#subKeys\").value)\n        // Subscribed && browser notifications enabled\n        if (subKeys.includes(auth)) {\n          toggleChecked = true\n        }\n      }\n    }\n    toggle.checked = toggleChecked\n  }\n\n  if (\"serviceWorker\" in navigator) {\n    const toggle = document.getElementById(\"allow_push_notifications\")\n\n    if (toggle) {\n      const registration = await navigator.serviceWorker.ready\n\n      setToggleState(registration, toggle)\n\n      toggle.addEventListener(\"change\", async ({ target }) => {\n        if (target.checked) {\n          await subscribeToNotifications(registration);\n        } else {\n          await unsubscribeFromNotifications(registration)\n        }\n      })\n    }\n  }\n});\n"]},"metadata":{},"sourceType":"module"}