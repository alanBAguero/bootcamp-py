{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n/* eslint-disable no-ternary, no-plusplus, require-jsdoc */\nvar DisplayCondition = /*#__PURE__*/function () {\n  function DisplayCondition() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, DisplayCondition);\n    this.wrapperField = options.wrapperField;\n    this.type = options.type;\n    this.conditionQuestion = options.conditionQuestion;\n    this.answerOption = options.answerOption;\n    this.mandatory = options.mandatory;\n    this.value = options.value;\n    this.onFulfilled = options.onFulfilled;\n    this.bindEvent();\n  }\n  _createClass(DisplayCondition, [{\n    key: \"bindEvent\",\n    value: function bindEvent() {\n      this.checkCondition();\n      this.getInputsToListen().on(\"change\", this.checkCondition.bind(this));\n    }\n  }, {\n    key: \"getInputValue\",\n    value: function getInputValue() {\n      var $conditionWrapperField = $(\".question[data-question-id='\".concat(this.conditionQuestion, \"']\"));\n      var $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n      if ($textInput.length) {\n        return $textInput.val();\n      }\n      var multipleInput = [];\n      $conditionWrapperField.find(\".radio-button-collection, .check-box-collection\").find(\".collection-input\").each(function (idx, el) {\n        var $input = $(el).find(\"input[name$=\\\\[body\\\\]]\");\n        var checked = $input.is(\":checked\");\n        if (checked) {\n          var text = $(el).find(\"input[name$=\\\\[custom_body\\\\]]\").val();\n          var value = $input.val();\n          var id = $(el).find(\"input[name$=\\\\[answer_option_id\\\\]]\").val();\n          multipleInput.push({\n            id: id,\n            value: value,\n            text: text\n          });\n        }\n      });\n      return multipleInput;\n    }\n  }, {\n    key: \"getInputsToListen\",\n    value: function getInputsToListen() {\n      var $conditionWrapperField = $(\".question[data-question-id='\".concat(this.conditionQuestion, \"']\"));\n      var $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n      if ($textInput.length) {\n        return $textInput;\n      }\n      return $conditionWrapperField.find(\".collection-input\").find(\"input:not([type='hidden'])\");\n    }\n  }, {\n    key: \"checkAnsweredCondition\",\n    value: function checkAnsweredCondition(value) {\n      if (_typeof(value) !== \"object\") {\n        return Boolean(value);\n      }\n      return Boolean(value.some(function (it) {\n        return it.value;\n      }));\n    }\n  }, {\n    key: \"checkNotAnsweredCondition\",\n    value: function checkNotAnsweredCondition(value) {\n      return !this.checkAnsweredCondition(value);\n    }\n  }, {\n    key: \"checkEqualCondition\",\n    value: function checkEqualCondition(value) {\n      var _this = this;\n      if (value.length) {\n        return value.some(function (it) {\n          return it.id === _this.answerOption.toString();\n        });\n      }\n      return false;\n    }\n  }, {\n    key: \"checkNotEqualCondition\",\n    value: function checkNotEqualCondition(value) {\n      var _this2 = this;\n      if (value.length) {\n        return value.every(function (it) {\n          return it.id !== _this2.answerOption.toString();\n        });\n      }\n      return false;\n    }\n  }, {\n    key: \"checkMatchCondition\",\n    value: function checkMatchCondition(value) {\n      var regexp = new RegExp(this.value, \"i\");\n      if (_typeof(value) !== \"object\") {\n        return Boolean(value.match(regexp));\n      }\n      return value.some(function (it) {\n        return it.text ? it.text.match(regexp) : it.value.match(regexp);\n      });\n    }\n  }, {\n    key: \"checkCondition\",\n    value: function checkCondition() {\n      var value = this.getInputValue();\n      var fulfilled = false;\n      switch (this.type) {\n        case \"answered\":\n          fulfilled = this.checkAnsweredCondition(value);\n          break;\n        case \"not_answered\":\n          fulfilled = this.checkNotAnsweredCondition(value);\n          break;\n        case \"equal\":\n          fulfilled = this.checkEqualCondition(value);\n          break;\n        case \"not_equal\":\n          fulfilled = this.checkNotEqualCondition(value);\n          break;\n        case \"match\":\n          fulfilled = this.checkMatchCondition(value);\n          break;\n        default:\n          fulfilled = false;\n          break;\n      }\n      this.onFulfilled(fulfilled);\n    }\n  }]);\n  return DisplayCondition;\n}();\nvar DisplayConditionsComponent = /*#__PURE__*/function () {\n  function DisplayConditionsComponent() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, DisplayConditionsComponent);\n    this.wrapperField = options.wrapperField;\n    this.conditions = {};\n    this.showCount = 0;\n    this.initializeConditions();\n  }\n  _createClass(DisplayConditionsComponent, [{\n    key: \"initializeConditions\",\n    value: function initializeConditions() {\n      var _this3 = this;\n      var $conditionElements = this.wrapperField.find(\".display-condition\");\n      $conditionElements.each(function (idx, el) {\n        var $condition = $(el);\n        var id = $condition.data(\"id\");\n        _this3.conditions[id] = {};\n        _this3.conditions[id] = new DisplayCondition({\n          wrapperField: _this3.wrapperField,\n          type: $condition.data(\"type\"),\n          conditionQuestion: $condition.data(\"condition\"),\n          answerOption: $condition.data(\"option\"),\n          mandatory: $condition.data(\"mandatory\"),\n          value: $condition.data(\"value\"),\n          onFulfilled: function onFulfilled(fulfilled) {\n            _this3.onFulfilled(id, fulfilled);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"mustShow\",\n    value: function mustShow() {\n      var conditions = Object.values(this.conditions);\n      var mandatoryConditions = conditions.filter(function (condition) {\n        return condition.mandatory;\n      });\n      var nonMandatoryConditions = conditions.filter(function (condition) {\n        return !condition.mandatory;\n      });\n      if (mandatoryConditions.length) {\n        return mandatoryConditions.every(function (condition) {\n          return condition.fulfilled;\n        });\n      }\n      return nonMandatoryConditions.some(function (condition) {\n        return condition.fulfilled;\n      });\n    }\n  }, {\n    key: \"onFulfilled\",\n    value: function onFulfilled(id, fulfilled) {\n      this.conditions[id].fulfilled = fulfilled;\n      if (this.mustShow()) {\n        this.showQuestion();\n      } else {\n        this.hideQuestion();\n      }\n    }\n  }, {\n    key: \"showQuestion\",\n    value: function showQuestion() {\n      this.wrapperField.fadeIn();\n      this.wrapperField.find(\"input, textarea\").prop(\"disabled\", null);\n      this.showCount++;\n    }\n  }, {\n    key: \"hideQuestion\",\n    value: function hideQuestion() {\n      if (this.showCount) {\n        this.wrapperField.fadeOut();\n      } else {\n        this.wrapperField.hide();\n      }\n      this.wrapperField.find(\"input, textarea\").prop(\"disabled\", \"disabled\");\n    }\n  }]);\n  return DisplayConditionsComponent;\n}();\nexport default function createDisplayConditions(options) {\n  return new DisplayConditionsComponent(options);\n}","map":{"version":3,"mappings":"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","names":["DisplayCondition","options","_classCallCheck","wrapperField","type","conditionQuestion","answerOption","mandatory","value","onFulfilled","bindEvent","_createClass","key","checkCondition","getInputsToListen","on","bind","$conditionWrapperField","$","$textInput","find","length","val","multipleInput","each","idx","el","$input","checked","is","text","id","push","_typeof","Boolean","some","it","checkAnsweredCondition","_this","toString","every","_this2","regexp","RegExp","match","getInputValue","fulfilled","checkNotAnsweredCondition","checkEqualCondition","checkNotEqualCondition","checkMatchCondition","DisplayConditionsComponent","conditions","showCount","initializeConditions","$conditionElements","$condition","data","_this3","Object","values","mandatoryConditions","filter","condition","nonMandatoryConditions","mustShow","showQuestion","hideQuestion","fadeIn","prop","fadeOut","hide","createDisplayConditions"],"sources":["/home/alan/.rvm/gems/ruby-3.0.3/gems/decidim-forms-0.27.0/app/packs/src/decidim/forms/display_conditions.component.js"],"sourcesContent":["/* eslint-disable no-ternary, no-plusplus, require-jsdoc */\n\nclass DisplayCondition {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.type = options.type;\n    this.conditionQuestion = options.conditionQuestion;\n    this.answerOption = options.answerOption;\n    this.mandatory = options.mandatory;\n    this.value = options.value;\n    this.onFulfilled = options.onFulfilled;\n    this.bindEvent();\n  }\n\n  bindEvent() {\n    this.checkCondition();\n    this.getInputsToListen().on(\"change\", this.checkCondition.bind(this));\n  }\n\n  getInputValue() {\n    const $conditionWrapperField = $(`.question[data-question-id='${this.conditionQuestion}']`);\n    const $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n\n    if ($textInput.length) {\n      return $textInput.val();\n    }\n\n    let multipleInput = [];\n\n    $conditionWrapperField.find(\".radio-button-collection, .check-box-collection\").find(\".collection-input\").each((idx, el) => {\n      const $input = $(el).find(\"input[name$=\\\\[body\\\\]]\");\n      const checked = $input.is(\":checked\");\n\n      if (checked) {\n        const text = $(el).find(\"input[name$=\\\\[custom_body\\\\]]\").val();\n        const value = $input.val();\n        const id = $(el).find(\"input[name$=\\\\[answer_option_id\\\\]]\").val();\n\n        multipleInput.push({ id, value, text });\n      }\n    });\n\n    return multipleInput;\n  }\n\n  getInputsToListen() {\n    const $conditionWrapperField = $(`.question[data-question-id='${this.conditionQuestion}']`);\n    const $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n\n    if ($textInput.length) {\n      return $textInput;\n    }\n\n    return $conditionWrapperField.find(\".collection-input\").find(\"input:not([type='hidden'])\");\n  }\n\n  checkAnsweredCondition(value) {\n    if (typeof (value) !== \"object\") {\n      return Boolean(value);\n    }\n\n    return Boolean(value.some((it) => it.value));\n  }\n\n  checkNotAnsweredCondition(value) {\n    return !this.checkAnsweredCondition(value);\n  }\n\n  checkEqualCondition(value) {\n    if (value.length) {\n      return value.some((it) => it.id === this.answerOption.toString());\n    }\n    return false;\n  }\n\n  checkNotEqualCondition(value) {\n    if (value.length) {\n      return value.every((it) => it.id !== this.answerOption.toString());\n    }\n    return false;\n  }\n\n  checkMatchCondition(value) {\n    let regexp = new RegExp(this.value, \"i\");\n\n    if (typeof (value) !== \"object\") {\n      return Boolean(value.match(regexp));\n    }\n\n    return value.some(function (it) {\n      return it.text\n        ? it.text.match(regexp)\n        : it.value.match(regexp)\n    });\n  }\n\n  checkCondition() {\n    const value = this.getInputValue();\n    let fulfilled = false;\n\n    switch (this.type) {\n    case \"answered\":\n      fulfilled = this.checkAnsweredCondition(value);\n      break;\n    case \"not_answered\":\n      fulfilled = this.checkNotAnsweredCondition(value);\n      break;\n    case \"equal\":\n      fulfilled = this.checkEqualCondition(value);\n      break;\n    case \"not_equal\":\n      fulfilled = this.checkNotEqualCondition(value);\n      break;\n    case \"match\":\n      fulfilled = this.checkMatchCondition(value);\n      break;\n    default:\n      fulfilled = false;\n      break;\n    }\n\n    this.onFulfilled(fulfilled);\n  }\n}\n\nclass DisplayConditionsComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.conditions = {};\n    this.showCount = 0;\n    this.initializeConditions();\n  }\n\n  initializeConditions() {\n    const $conditionElements = this.wrapperField.find(\".display-condition\");\n\n    $conditionElements.each((idx, el) => {\n      const $condition = $(el);\n      const id = $condition.data(\"id\");\n      this.conditions[id] = {};\n\n      this.conditions[id] = new DisplayCondition({\n        wrapperField: this.wrapperField,\n        type: $condition.data(\"type\"),\n        conditionQuestion: $condition.data(\"condition\"),\n        answerOption: $condition.data(\"option\"),\n        mandatory: $condition.data(\"mandatory\"),\n        value: $condition.data(\"value\"),\n        onFulfilled: (fulfilled) => {\n          this.onFulfilled(id, fulfilled);\n        }\n      });\n    });\n  }\n\n  mustShow() {\n    const conditions = Object.values(this.conditions);\n    const mandatoryConditions = conditions.filter((condition) => condition.mandatory);\n    const nonMandatoryConditions = conditions.filter((condition) => !condition.mandatory);\n\n    if (mandatoryConditions.length) {\n      return mandatoryConditions.every((condition) => condition.fulfilled);\n    }\n\n    return nonMandatoryConditions.some((condition) => condition.fulfilled);\n\n  }\n\n  onFulfilled(id, fulfilled) {\n    this.conditions[id].fulfilled = fulfilled;\n\n    if (this.mustShow()) {\n      this.showQuestion();\n    }\n    else {\n      this.hideQuestion();\n    }\n  }\n\n  showQuestion() {\n    this.wrapperField.fadeIn();\n    this.wrapperField.find(\"input, textarea\").prop(\"disabled\", null);\n    this.showCount++;\n  }\n\n  hideQuestion() {\n    if (this.showCount) {\n      this.wrapperField.fadeOut();\n    }\n    else {\n      this.wrapperField.hide();\n    }\n\n    this.wrapperField.find(\"input, textarea\").prop(\"disabled\", \"disabled\");\n  }\n}\n\nexport default function createDisplayConditions(options) {\n  return new DisplayConditionsComponent(options);\n}\n"]},"metadata":{},"sourceType":"module"}